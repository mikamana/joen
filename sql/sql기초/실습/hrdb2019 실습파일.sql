/* hrdb2019 실습파일 */

/*

	특정 데이터를 검색 : where 조건절 + 비교연산자
	형식 : select [컬럼리스트] from [테이블명] where [조건절+비교연산자]

*/ 
  -- employee 테이블 구조 확인
-- department 테이블 구조 확인
-- employee 테이블에 있는 사원id, 사원명, 이메일를 조회
-- employee 테이블에 있는 모든 컬럼을 조회
-- department 테이블의 모든 컬럼을 조회
-- employee 테이블 emp_id 컬럼명을 사원번호 로 변경 후 조회
-- employee 테이블의 모든 사원의 연봉, 보너스(연봉10%) 조회
-- 현재 날짜를 가져오는 함수에 별칭 사용
-- 사원id가 S0007에 해당하는 사원정보를 모두 조회
-- 사원명이 일지매인 사원의 모든 정보를 조회
-- 홍길동 사원의 사원아이디, 성별, 폰번호, 이메일, 연봉 조회
-- 총무부에 속한 모든 사원의 정보를 조회
-- 모든 남자사원의 사원명, 입사일, 폰번호, 연봉 조회
-- NULL은 미지수의 개념으로 이해!! 
-- eng_name이 현재 정의되지 않은 사원들을 모두 조회
-- eng_name이 null이 아닌 사원들을 모두 조회
/*
	NULL 값을 다른값으로 대체하는 함수 : ifnull()
    형식 : ifnull(null포함 컬럼명, 변경하는값)
*/    
-- eng_name이 null값을 '홍길동'으로 대체한 후 조회
-- retire_date가 null인 경우 현재기준 날짜로 대체하여 조회
-- 사원테이블에 존재하는 모든 부서번호를 중복을 배제하고 조회
-- 사원id 기준으로 오름차순 정렬 후 모든 데이터 출력
-- 입사일이 가장 빠른 순서대로 사원들을 모두 조회
-- 연봉이 가장 높은 순으로 사원들을 모두 조회
-- eng_name이 null인 사원들 중 입사일이 가장 빠른순서대로 조회
-- 정보시스템 부서 사원 중 입사일이 가장 빠르고, 급여를 많이 받는
-- 순서로 정렬하여 조회
-- 연봉이 5000 이상인 사원들만 조회
-- 2015년 1월 1일 이후 입사자들을 입사일이 빠른 순서로 조회
-- 조회기준 연봉이 null인 직원의 값은 0으로 정의
-- salary값이 null 인 값을 제외한 값을 조회
-- where 조건절에 날짜를 비교할 경우 ''로 감싸서 비교 > 비교할 땐 숫자로 인식해서 비교함
-- 입사일이 2016년 1월 1일 이후 이고, 연봉이 6000 이상인 사원들을 조회
-- 최근 입사일 기준으로 정렬
-- 입사일이 2016년 1월 1일 이후 이거나, 연봉이 6000 이상인 사원들을 조회
-- 최근 입사일 기준으로 정렬
-- 정보시스템 부서 중 급여가 7000이상인 사원들만 조회
-- 영업부 직원들 중 2016-01-01 입사자들의 사원아이디, 사원명, 성별, 입사일, 이메일
-- 연봉, 보너스(연봉의 20%) 조회
-- 보너스가 1000 이상인 직원만 조회
-- 조건절에 들어가는 컬럼은 반드시 물리적으로 들어가는 컬럼이어야한다.
-- 연봉이 null인 사원은 기본값을 50으로 정의
-- 범위 조회 - between ~ and
-- 형식 : where [컬럼명] between [시작] and [종료]
-- 연봉이 6000 이상, 7000 미만인 사원들만 조회
-- 입사년도가 2015년인 사원들만 조회
-- 정보시스템 부서와 영업부서의 사원들만 조회
-- or 논리연산자 : in(값1,값2,값3) 연산자로 사용 
-- 형식 : where [컬럼명] in (값1,값2,값3)
/*

	문자열 검색 : 와일드 문자(%, _) - like 연산자와 함께 사용

*/
-- 사원들 중 김씨 성을 가진 모든 사원 조회
-- 폰번호가 010으로 시작하는 영업부의 모든 사원 조회
-- 이메일주소 두번째 자리에 'a'가 들어가는 사원 조회
-- 이메일 아이디가 4자리인 사원 조회
-- 사원명에 '삼'자가 들어가는 모든 사원 조회
-- 함수 테스트 테이블 : Dual
-- 123, -123 절대값 출력 : abs() 함수 사용
-- select abs(-123) as '절대값출력', abs(123) as '절대값출력' from dual;
-- MYSQL에서는 from dual 생략 가능
-- select abs(-123) as '절대값출력1', abs(123) as '절대값출력2';
-- 소수점 버리기
-- 자리수 지정해서 소수점 버리기 
-- 임의의 숫자 1~3자리수 생성 : rand(), 자리수 지정해서 소수점버리기
-- 랜덤한 숫자 1~3자리수 뽑기
-- 나머지 연산 : mod()
-- 랜덤한 숫자 짝수
-- 랜덤한 숫자 중 짝수구하기
-- select truncate(rand(mod(rand(),2))*1000, 1);
-- 문자함수
-- 문자열 결합 : concat()
-- 홍길동(S001)
-- 홍길동 사원만 조회
-- 문자열 추출 : substring(문자열, 위치, 문자열수)
-- 2014년에 입사한 모든 사원의 사원아이디, 사원명, 입사년도,입사월,입사일, 폰번호, 이메일 조회
-- 2015년에 입사자들 모두 조회
-- 1월에 입사한 사원들 조회
-- 2018년도에 입사한 정보시스템 부서 사원 조회
-- 오른쪽, 왼쪽 기준 문자열 추출 : left('문자열',숫자), right('문자열')
-- 대,소문자 변경 : upper('문자열'), lower('문자열')
-- MySQL에서만 s0001 대문자로 자동 변경해주고 다른 툴에서는 타입을 명확히 정해주어야함.
-- 검색하는 데이터가 소문자로 전달된 경우 : sys
-- 공백 삭제 : trim('공백포함 문자열')
-- 앞에있는 문자들 중 '!' 삭제하는 방법
-- 뒤에있는 문자들 중 '!' 삭제하는 방법
-- 문자열 포맷
-- 연봉을 3자리로 구분하여 출력
-- 날짜 함수 : curdate() = 년월일만 반환, sysdate() = 년월일시분초 반환, now() = 년월일시분초 반환 insert할 때 많이 사용됌 (장바구니에 넣은 날짜, 게시판에 등록한 날짜 등)
select curdate(); -- 년월일 반환;
select sysdate();-- 년월일시분초 반환, oracle에서는 sysdate()만 사용;
select now(); -- 년월일시분초 반환;
select sysdate(), sleep(2), sysdate();
-- sysdate()는 실행되는 기준이 함수 기준이다.
select now(), sleep(2), now();
-- now()는 실행되는 기준이 쿼리 기준이다.(한쿼리에 두개의 now가 같이 있기때문에 같은 초가 나옴)
-- 형변환 함수 : cast(변환하고자 하는 데이터 as 변환데이터타입), convert()
-- MySQL에서는 형변환을 하지않아도 자동으로 형변환이 되어버림
-- 123456789 숫자를 문자로 변환 후 3자리 숫자로 구분하기
-- 현재 날짜를 가져와서(년,월,일) 문자로 변경, 다시 날짜타입(datetime)으로 바꿔주기
-- 입력폼에서 '20150101' 문자열 타입으로 전송되어진 경우, 해당일의 입사자를 모두 조회
-- MySQL에서는 자동으로 형변환이 돼서 select * from employee where hire_date = '20150101'; 이렇게 줄여서 사용 가능
-- 연봉, 보너스(연봉의 20%) 조회, 연봉이 null인 사원은 기본값을 50으로 정의, 보너스가 1000 이상인 사원 조회
-- 입사년도가 2015년(2015-01-01 ~ 2015-12-31)인 사원들만 조회 : between and 사용
-- 정보시스템 부서와 영업부서의 사원들만 조회 : in 사용
-- 사원들 중 김씨 성을 가진 모든 사원 조회
-- 폰번호가 010으로 시작하는 영업부의 모든 사원 조회
-- 이메일주소 두번째 자리에 'a'가 들어가는 사원 조회
-- 이메일 아이디가 4자리인 사원 조회	
-- 사원명에 '삼'자가 들어가는 모든 사원 조회
-- 3843.384349534 값의 소수점 버리고 정수만 추출
-- 3843.384349534 값의 소수점 3자리와 정수 추출
-- 정수 5자리 숫자를 임의로 생성하고, 3자리씩 구분하여 출력, 이때 소수점 자릿수는 없음
-- 사원아이디가 짝수인 사원들만 조회 : 사원아이디 S0001의 숫자만 추출하여 나머지 함수를 적용
-- 사원이름과 사원아이디를 결합하여 홍길동(S0001) 형식으로 출력
-- 사원이름과 사원아이디를 결합하여 [홍길동(S0001)], 연봉 컬럼을 [8,500만원(보너스10%)] 형식으로 출력 출력
-- 문자열 추출 : substring(문자열, 위치, 문자열수)
-- 사원아이디, 사원명, 입사년도, 폰번호, 이메일 조회
 -- 2015년도 입사자들 모두 조회
 -- 1월에 입사한 사원들 조회
 -- 2018년도에 입사한 정보시스템 부서 사원 조회
-- 오른쪽, 왼쪽 기준 문자열 추출 : left('문자열',숫자), right('문자열',숫자)
 -- 대,소문자 변경 : upper('문자열'), lower('문자열')
 -- 검색하는 데이터가 소문자로 전달된 경우 : sys
 -- '             대 한 민 국           ' 문자열의 앞,뒤 공백 삭제
 -- '&&&&&&&&&&&&&&&&&&&&&&&&&대 한 민 국           ' 문자열의 앞에 있는 & 기호 삭제
  -- '대 한 민 국$$$$$$$$$$$$$$$$$$$$$$$$' 문자열의 앞에 있는 $ 기호 삭제
 -- 숫자 452147895412 문자열 포맷을 사용하여 3자리로 구분하고, 소수점 자리수 2자리까지 출력
 -- 사원아이디, 사원명, 입사년도, 연봉을 3자리로 구분하여 출력
-- 날짜 함수 : curdate(), sysdate(), now()
-- 123456789 숫자를 문자로 변환 후 3자리숫자로 구분
-- 현재 날짜를 가져와서(년,월,일) 문자로 변경, 다시 날짜타입(datetime)으로 변경
-- 현재 날짜를 가져와서(년,월,일,시,분,초) 문자로 변경, 다시 날짜타입(datetime)으로 변경
-- 입력폼에서 '20150101' 문자열 타입으로 전송되어진 경우, 해당일의 입사자를 모두 조회
-- sum(숫자데이터 컬럼)
-- 사원들의 총급여를 출력, 3자리로 구분, '만원' 단위 추가
-- avg(숫자데이터 컬럼)
-- 평균급여를 출력, 3자리 구분, '만원' 단위 추가 단, 소수점이 있는 경우 모두 절삭
-- 총급여, 평균급여 출력
-- 총연봉, 평균연봉, 최대연봉, 최저연봉      
-- 가장빠른 입사일, 가장최근 입사일
-- 부서별 총연봉, 평균연봉, 최대연봉, 최저연봉
-- 기본키의 group by는 개별적인 데이터기준으로 그룹핑됨
-- 입사년도별 총연봉, 평균연봉, 최대연봉, 최저연봉
-- 입사월별 사원수, 총연봉, 평균연봉, 최대연봉, 최저연봉
-- 부서별 사원수가 2명인 부서만 출력
 -- 입사년도별 평균급여가 5000 이상인 해당년도만 출력
  -- 부서별 최고급여가 6000 이상 7000미만인 부서 출력
 -- rollup 함수를 사용하여 총합계, 소계를 출력
 -- 부서별 총합계를 출력, 3자리 구분 단, 사원이 없는 부서는 그룹핑하지 않음
 -- 년도별, 각 부서의 사원수와 총연봉을 출력
-- 부서별, 사원수(성별구분) 출력
-- 부서별 총연봉 출력하고, rollup을 이용하여 그룹핑한 부서의 총합계를 마지막에 '총합계'라는 컬럼명으로 출력
-- 2018년에 입사한 영업부, 2015년에 입사한 정보시스템 부서, 2014년에 입사한 사원들의 사원아이디, 사원명, 부서아이디, 입사일을 출력하고 
-- union을 사용하여 출력해주세요
-- 2016년에 입사한 영업부, 2015년에 입사한 정보시스템 부서, 2014년에 입사한 사원들의 사원아이디, 사원명, 부서아이디, 입사일을 출력하고 
-- union all을 사용하여 출력해주세요
-- 서브쿼리(스칼라 서브쿼리/인라인뷰/서브쿼리) 맛보기
-- select 컬럼리스트       from 테이블명 where 조건절
--        (스칼라 서브쿼리)     (인라인뷰)      (서브쿼리)
-- 홍길동 사원이 속한 부서의 이름을 서브쿼리를 사용하여 조회